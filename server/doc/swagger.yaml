components:
  schemas:
    dto.HttpError:
      properties:
        error:
          type: string
      type: object
    dto.HttpResponse-dto_LoginResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.LoginResponse'
      type: object
    dto.HttpResponse-dto_TokenResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.TokenResponse'
      type: object
    dto.HttpResponse-dto_UserResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.UserResponse'
      type: object
    dto.LoginRequest:
      properties:
        idToken:
          type: string
        provider:
          description: GOOGLE
          type: string
      required:
      - idToken
      - provider
      type: object
    dto.LoginResponse:
      properties:
        accessToken:
          type: string
        exp:
          type: integer
        refreshToken:
          type: string
        user:
          $ref: '#/components/schemas/dto.UserResponse'
      type: object
    dto.RefreshTokenRequest:
      properties:
        refreshToken:
          type: string
      required:
      - refreshToken
      type: object
    dto.TokenResponse:
      properties:
        accessToken:
          type: string
        exp:
          type: integer
        refreshToken:
          type: string
      type: object
    dto.UserResponse:
      properties:
        email:
          type: string
        id:
          type: integer
        name:
          type: string
        profilePictureUrl:
          type: string
      type: object
    dto.UserUpdateRequest:
      properties:
        name:
          type: string
        profilePictureUrl:
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
externalDocs:
  description: ""
  url: ""
info:
  description: Messenger API Documentation
  title: Messenger API
  version: "0.1"
openapi: 3.1.0
paths:
  /api/v1/auth/login:
    post:
      description: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.LoginRequest'
        description: request request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_LoginResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      summary: Login
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      description: Logout
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      description: Refresh Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RefreshTokenRequest'
        description: request request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_TokenResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      summary: Refresh Token
      tags:
      - auth
  /api/v1/me:
    get:
      description: Get me
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_UserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get me
      tags:
      - user
    patch:
      description: Update user's profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UserUpdateRequest'
        description: request request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_UserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update me
      tags:
      - user

definitions:
  dto.HttpError:
    properties:
      error:
        type: string
    type: object
  dto.HttpResponse-dto_LoginResponse:
    properties:
      result:
        $ref: '#/definitions/dto.LoginResponse'
    type: object
  dto.HttpResponse-dto_RegisterResponse:
    properties:
      result:
        $ref: '#/definitions/dto.RegisterResponse'
    type: object
  dto.HttpResponse-dto_TokenResponse:
    properties:
      result:
        $ref: '#/definitions/dto.TokenResponse'
    type: object
  dto.HttpResponse-dto_UserResponse:
    properties:
      result:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.LoginRequest:
    properties:
      idToken:
        type: string
      provider:
        description: GOOGLE
        type: string
    required:
    - idToken
    - provider
    type: object
  dto.LoginResponse:
    properties:
      accessToken:
        type: string
      exp:
        type: integer
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  dto.RegisterRequest:
    properties:
      idToken:
        type: string
      provider:
        description: GOOGLE
        type: string
    required:
    - idToken
    - provider
    type: object
  dto.RegisterResponse:
    properties:
      accessToken:
        type: string
      exp:
        type: integer
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.TokenResponse:
    properties:
      accessToken:
        type: string
      exp:
        type: integer
      refreshToken:
        type: string
    type: object
  dto.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phoneNumber:
        type: string
      profilePictureUrl:
        type: string
    type: object
  dto.UserUpdateRequest:
    properties:
      name:
        type: string
      phoneNumber:
        type: string
      profilePictureUrl:
        type: string
    type: object
info:
  contact: {}
  description: Messenger API Documentation
  title: Messenger API
  version: "0.1"
paths:
  /api/v1/auth/login:
    post:
      description: Login
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HttpResponse-dto_LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpError'
      summary: Login
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      description: Refresh Token
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HttpResponse-dto_TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpError'
      summary: Refresh Token
      tags:
      - auth
  /api/v1/auth/register:
    post:
      description: Register
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HttpResponse-dto_RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpError'
      summary: Register
      tags:
      - auth
  /api/v1/me:
    get:
      description: Get me
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HttpResponse-dto_UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpError'
      security:
      - ApiKeyAuth: []
      summary: Get me
      tags:
      - user
    patch:
      description: Update user's profile
      parameters:
      - description: request request
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HttpResponse-dto_UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HttpError'
      security:
      - ApiKeyAuth: []
      summary: Update me
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
